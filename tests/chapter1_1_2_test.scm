#lang scheme

(require "matchers.scm")
(require "../chapter1_1_2.scm")

(test (factorial-recursive 1) 1)
(test (factorial-recursive 2) 2)
(test (factorial-recursive 3) 6)
(test (factorial-recursive 4) 24)
(test (factorial-recursive 5) 120)

(test (factorial-iterative 1) 1)
(test (factorial-iterative 2) 2)
(test (factorial-iterative 3) 6)
(test (factorial-iterative 4) 24)
(test (factorial-iterative 5) 120)

(test (Ackermann 1 10) 1024)
(test (Ackermann 2 4) 65536)
(test (Ackermann 3 3) 65536)

(test (fib-recursive 0) 0)
(test (fib-recursive 1) 1)
(test (fib-recursive 2) 1)
(test (fib-recursive 3) 2)
(test (fib-recursive 4) 3)
(test (fib-recursive 5) 5)
(test (fib-recursive 6) 8)
(test (fib-recursive 7) 13)
(test (fib-recursive 8) 21)

(test (fib-iterative 0) 0)
(test (fib-iterative 1) 1)
(test (fib-iterative 2) 1)
(test (fib-iterative 3) 2)
(test (fib-iterative 4) 3)
(test (fib-iterative 5) 5)
(test (fib-iterative 6) 8)
(test (fib-iterative 7) 13)
(test (fib-iterative 8) 21)

(test (count-change 100) 292)
(test (count-change 200) 2435)

(test (f-recursive 0) 0)
(test (f-recursive 1) 1)
(test (f-recursive 2) 2)
(test (f-recursive 3) 4)
(test (f-recursive 4) 11)
(test (f-recursive 5) 25)
(test (f-recursive 6) 59)

(test (f-iterative 0) 0)
(test (f-iterative 1) 1)
(test (f-iterative 2) 2)
(test (f-iterative 3) 4)
(test (f-iterative 4) 11)
(test (f-iterative 5) 25)
(test (f-iterative 6) 59)

(test (pascal-triangle-element 1 2) 1)
(test (pascal-triangle-element 2 1) 1)
(test (pascal-triangle-element 5 5) 1)
(test (pascal-triangle-element 2 3) 2)
(test (pascal-triangle-element 2 4) 3)
(test (pascal-triangle-element 3 4) 3)
(test (pascal-triangle-element 2 5) 4)
(test (pascal-triangle-element 3 5) 6)
(test (pascal-triangle-element 4 5) 4)
(test (pascal-triangle-element 2 6) 5)
(test (pascal-triangle-element 3 6) 10)

